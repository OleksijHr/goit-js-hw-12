import{a as b,s as v,i as n}from"./assets/vendor-33018bce.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))u(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&u(a)}).observe(document,{childList:!0,subtree:!0});function r(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function u(t){if(t.ep)return;t.ep=!0;const s=r(t);fetch(t.href,s)}})();const C=function(e){return e.map(({views:o,comments:r,downloads:u,likes:t,webformatURL:s,tags:a,largeImageURL:g})=>`<li>
        <div class="img-box">
        <a href="${g}">
        <img class="img" src="${s}" alt="${a}" width="360" height="200">
        </a>
        <ul class="value-list">
        <li class="likes value-item"><p class="article">Likes</p><p class="value">${t}</p></li>
        <li class="views value-item" ><p class="article">Views</p><p class="value">${o}</p></li>
        <li class="comments value-item"><p class="article">Comments</p><p class="value">${r}</p></li>
        <li class="downloads value-item"><p class="article">Downloads</p><p class="value">${u}</p></li>
        </ul></div>
        </li>`).join("")},w="https://pixabay.com/api/",L="43211197-e02e136a3ee46bcda7d5bf66f";async function m(e,o){const{data:r}=await b(`${w}`,{params:{key:L,q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:o}});return r}const y=document.querySelector(".search-form"),S=document.querySelector("input"),f=document.querySelector(".object-list"),l=document.querySelector(".loader-box"),c=document.querySelector(".load-more-btn"),$=new v(".gallery a",{caption:!0,captionsData:"alt",captionDelay:250,showCounter:!1});y.addEventListener("submit",k);c.addEventListener("click",q);let i=1,d,p;function k(e){if(e.preventDefault(),!S.value)return n.error({message:"Sorry, there are no images matching your search query. Please try again!",backgroundColor:"red",closeOnClick:!0,position:"topCenter"});f.textContent="",l.style.display="flex",p=e.currentTarget.elements.search.value.trim(),i=1,m(p,i).then(o=>{if(!o.total)return l.style.display="none",c.style.display="none",n.info({message:"Don't found",closeOnClick:!0,position:"topCenter"});h(o.hits),e.target.reset(),l.style.display="none",c.style.display="block"}).catch(o=>(l.style.display="none",n.error({message:`${o.message}`,backgroundColor:"red",position:"topCenter"})))}async function q(){l.style.display="flex",i=i+1,await m(p,i).then(e=>{h(e.hits);const o=document.querySelector("li"),{height:r}=o.getBoundingClientRect();x(r*2,0),y.reset(),l.style.display="none",c.style.display="block",d=Math.floor(e.totalHits/15),i>=d&&(c.style.display="none",n.show({titleColor:"white",message:"We're sorry, but you've reached the end of search results!",messageColor:"black",color:"blue",position:"topCenter",timeout:"5000"}))}).catch(e=>(l.style.display="none",n.error({message:`${e.message}`,backgroundColor:"red",position:"topCenter"})))}function h(e){f.insertAdjacentHTML("beforeend",C(e)),$.refresh()}function x(e=0,o=0){window.scrollBy({top:e,left:o,behavior:"smooth"})}
//# sourceMappingURL=commonHelpers.js.map
